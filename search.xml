<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java中String和byte[]转换长度异常情况</title>
      <link href="/2020/06/12/java-zhong-string-he-byte-zhuan-huan-chang-du-yi-chang-qing-kuang/"/>
      <url>/2020/06/12/java-zhong-string-he-byte-zhuan-huan-chang-du-yi-chang-qing-kuang/</url>
      
        <content type="html"><![CDATA[<blockquote><p>工作中遇到，要拆分String成固定字节长度的几串字符。做法是转byte[]，拆分后再转String返回数据，但拆分后的String字节长度并不是前面固定的值</p></blockquote><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>  举个例子，一个String字符串要拆分成2个字符串，需要保证第一个字符串为5个字节，此处也只针对前半部分字符串进行讨论。</p><p>  以前学C语言还记得英文字符占1个字节，中文占2个字节，到java变成英文字符占2个字节，但实际上是字符编码不同影响所占字节数。此文章以UTF-8为准，Java中汉字占3个字节。</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">"你是谁"</span>;</span><br><span class="line"><span class="comment">//原字符串全转为byte数组</span></span><br><span class="line"><span class="type">byte</span>[] b = str.getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="comment">//拆分的第一个byte数组，保证只有5个字节长度</span></span><br><span class="line"><span class="type">byte</span>[] b1 = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">5</span>];</span><br><span class="line"><span class="comment">//将原byte数组复制前5个字节到拆分的第一个数组b1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) {</span><br><span class="line">    b1[i] = b[i];</span><br><span class="line">};</span><br><span class="line"><span class="comment">//b1数组转为需要返回的前半部分字符串，按理说b1数组是5个字节，那么str1应该也是5个字节</span></span><br><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(b1, <span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="comment">//对str1再次转换，转成byte[]</span></span><br><span class="line"><span class="type">byte</span>[] b2 = str1.getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line"><span class="comment">//对相关数据输出展示</span></span><br><span class="line">System.out.println(<span class="string">"str原字符串："</span> + str);</span><br><span class="line">System.out.println(<span class="string">"str原字符串转换的byte数组b："</span> + Arrays.toString(b));</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"str前5个字节的byte数组b1："</span> + Arrays.toString(b1));</span><br><span class="line">System.out.println(<span class="string">"str拆分后的前半部分字符串str1："</span> + str1);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"str1再次转为byte数组b2："</span> + Arrays.toString(b2));</span><br><span class="line">System.out.println(<span class="string">"str1再次转为byte数组b2的长度："</span> + b2.length);</span><br></pre></td></tr></tbody></table></figure><p>可以看一下输出</p><blockquote><p>str原字符串：你是谁<br>str原字符串转换的byte数组b：[-28, -67, -96, -26, -104, -81, -24, -80, -127]<br>str前5个字节的byte数组b1：[-28, -67, -96, -26, -104]<br>str拆分后的前半部分字符串str1：你�<br>str1再次转为byte数组b2：[-28, -67, -96, -17, -65, -67]<br>str1再次转为byte数组b2的长度：6</p></blockquote><p>问题出现了，前5个字节转换成的字符串str1，再转成byte[]变成6个字节了。</p><p>原因：汉字3个字节，原字符串3个汉字，共9个字节，切割前5个必然会把一个汉字分割，切分后的5个字节前3个按照UTF-8还可以转换为汉字，但是后2个已经无法组成一个汉字，我猜测若UTF-8中没有这2个字节组成的字符就会变成乱码，导致再次转换出现异常。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>  在进行转换时首先要确定字符编码，统一一种来进行开发，其次如果有切割字符串的操作（此处的切割指的是字节层面，并非单纯的切分），要尽量避免把一个汉字切分，可以适当移动字符串使得刚好不切割汉字。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bootstrapTable的生成、动态列、样式渲染</title>
      <link href="/2019/08/23/bootstraptable-de-sheng-cheng-dong-tai-lie-yang-shi-xuan-ran/"/>
      <url>/2019/08/23/bootstraptable-de-sheng-cheng-dong-tai-lie-yang-shi-xuan-ran/</url>
      
        <content type="html"><![CDATA[<p>最近工作用到很多bootstrap的知识，以前我只是简单的用他的响应式样式，关于table生成这种没怎么用过，现在总结一下其中的知识也算复习了。</p><h2 id="bootstrapTable-生成"><a href="#bootstrapTable-生成" class="headerlink" title="bootstrapTable 生成"></a>bootstrapTable 生成</h2><p>提供的table我们只需要设置一些参数，比如ajax的参数、列名、分页、排序等等就可以自动发送请求获得结果，渲染成表格，这个直接看文档就会，主要是那些参数和方法要多看看，有些很有用。这里提几个:</p><blockquote><p>columns              </p></blockquote><p>列配置项，是一个数组[]，我们可以自定义var构建这个列参数，也可以直接写好。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">   filed: xxx  //表示列的主体内容，这个内容要对应后台参数中的名称，比如后台数据[{id:123}]，那么field就要写id</span><br><span class="line">   title: xxx //列名，显示的标题</span><br><span class="line">   formatter：function(value, row, index){  //对数据进行自定义,value表示对应field的数据，row表示这一行的内容，index表示序号，从0开始</span><br><span class="line">      return index + 1; //这样表示返回序号，从1开始，第2行2这样。可以在这对value处理再返回</span><br><span class="line">   }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>ajax    </p></blockquote><p>自定义ajax方法,可以自己写ajax，不采用bootstrap的</p><blockquote><p>queryParams</p></blockquote><p>请求服务器后台的参数</p>]]></content>
      
      
      <categories>
          
          <category> bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode第4题：两个排序数组的中位数题解</title>
      <link href="/2018/09/19/leetcode-di-4-ti-liang-ge-pai-xu-shu-zu-de-zhong-wei-shu-ti-jie/"/>
      <url>/2018/09/19/leetcode-di-4-ti-liang-ge-pai-xu-shu-zu-de-zhong-wei-shu-ti-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>做到第四题，感觉好难，复杂度O(log(m+n))不好做，觉得该二分，做了一个小时放弃了，感觉没大一大二那种一直做下去，几个小时都不放弃的精力了，也可能是天气太热…..索性看了看官方的题解，顿时感觉茅塞顿开，我就把那题解放到这来吧。<a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/solution/#">原文链接</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>为了解决这个问题，我们需要理解“中位数的作用是什么”。在统计中，中位数被用来：</p><blockquote><p>将一个集合划分为两个长度相等的子集，其中一个子集中的元素总是大于另一个子集中的元素。</p></blockquote><p>如果理解了中位数的划分作用，我们就很接近答案了。</p><p>首先，让我们在任一位置  将 A 划分成两个部分：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   left_A                |        right_A</span><br><span class="line">A[0], A[1], ..., A[i-1]  |  A[i], A[i+1], ..., A[m-1]</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>由于 A 中有 m 个元素， 所以我们有 m+1 种划分的方法（i=0∼m）。</p><p>我们知道：</p><blockquote><p>len(left_A)=i,len(right_A)=m−i.</p></blockquote><blockquote><p>注意：当 i=0 时，left_A 为空集， 而当 i=m 时, right_A 为空集。</p></blockquote><p>采用同样的方式，我们在任一位置 j 将 B 划分成两个部分：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  left_B                 |        right_B</span><br><span class="line">B[0], B[1], ..., B[j-1]  |  B[j], B[j+1], ..., B[n-1]</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><p>将 left_A 和 left_B 放入一个集合，并将 rright_A 和 right_B 放入另一个集合。 再把这两个新的集合分别命名为 left_part 和 right_part：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">      left_part          |        right_part</span><br><span class="line">A[0], A[1], ..., A[i-1]  |  A[i], A[i+1], ..., A[m-1]</span><br><span class="line">B[0], B[1], ..., B[j-1]  |  B[j], B[j+1], ..., B[n-1]</span><br></pre></td></tr></tbody></table></figure><p>如果我们可以确认：</p><blockquote><p>1.len(left_part)=len(right_part)<br>2.max⁡(left_part)≤min⁡(right_part)</p></blockquote><p>那么，我们已经将 {A,B} 中的所有元素划分为相同长度的两个部分，且其中一部分中的元素总是大于另一部分中的元素。那么：</p><p>median=max(left_part)+min(right_part)​ / 2</p><p>要确保这两个条件，我们只需要保证：</p><blockquote><p>1.i+j=m−i+n−j（或：m−i+n−j+1） 如果 n≥m，只需要使  i=0∼m, j=(m+n+1)/2−i<br>2.B[j−1]≤A[i] 以及 A[i−1]≤B[j]</p></blockquote><p>ps.1 为了简化分析，我假设 A[i−1],B[j−1],A[i],B[j]总是存在，哪怕出现 i=0，i=m，j=0，或是 j=n 这样的临界条件。 我将在最后讨论如何处理这些临界值。</p><p>ps.2 为什么 n≥m？由于0≤i≤m且 j=(m+n+1)/2−i，我必须确保 j 不是负数。如果 n&lt;m，那么 j 将可能是负数，而这会造成错误的答案。</p><p>所以，我们需要做的是：</p><blockquote><p>在 [0，m] 中搜索并找到目标对象 i，以使：<br>B[j−1]≤A[i] 且  A[i−1]≤B[j],其中 j=(m+n+1)/2−i</p></blockquote><p>接着，我们可以按照以下步骤来进行二叉树搜索：</p><p>设 imin=0，imax=m, 然后开始在 [imin,imax] 中进行搜索。<br>令 i=(imin+imax)/2​， j=(m+n+1)/2−i</p><p>现在我们有 len(left_part)=len(right_part)。 而且我们只会遇到三种情况：</p><p>B[j−1]≤A[i] 且 A[i−1]≤B[j]：<br>这意味着我们找到了目标对象 i，所以可以停止搜索。</p><p>B[j−1]&gt;A[i]：<br>这意味着 A[i] 太小，我们必须调整 i 以使 B[j−1]≤A[i]。<br>我们可以增大 i 吗？<br>是的，因为当 i 被增大的时候，j 就会被减小。<br>因此 B[j−1] 会减小，而 A[i] 会增大，那么 B[j−1]≤A[i] 就可能被满足。<br>我们可以减小 i 吗？<br>不行，因为当 i 被减小的时候，j 就会被增大。<br>因此 B[j−1] 会增大，而 A[i] 会减小，那么 B[j−1]≤A[i] 就可能不满足。<br>所以我们必须增大 i。也就是说，我们必须将搜索范围调整为 [i+1,imax]。 因此，设imin=i+1并转到步骤 2。</p><p>A[i−1]&gt;B[j]： 这意味着 A[i−1] 太大，我们必须减小 i 以使 A[i−1]≤B[j]。 也就是说，我们必须将搜索范围调整为 [imin,i−1]。<br>因此，设 imax=i−1，并转到步骤 2。</p><p>当找到目标对象 i 时，中位数为：</p><blockquote><p>max(A[i−1],B[j−1]),  当 m+n 为奇数时</p></blockquote><blockquote><p>max⁡(A[i−1],B[j−1])+min⁡(A[i],B[j])/2, ​,  当 m+n为偶数时</p></blockquote><p>现在，让我们来考虑这些临界值 i=0,i=m,j=0,j=n，此时 A[i−1],B[j−1],A[i],B[j] 可能不存在。 其实这种情况比你想象的要容易得多。</p><p>我们需要做的是确保 max(left_part)≤min(right_part)。 因此，如果 i 和 j 不是临界值（这意味着 A[i−1],B[j−1],A[i],B[j]全部存在）, 那么我们必须同时检查 B[j−1]≤A[i] 以及 A[i−1]≤B[j] 是否成立。 但是如果 A[i−1],B[j−1],A[i],B[j] 中部分不存在，那么我们只需要检查这两个条件中的一个（或不需要检查）。 举个例子，如果 i=0，那么 A[i−1]不存在，我们就不需要检查 A[i−1]≤B[j] 是否成立。 所以，我们需要做的是：</p><blockquote><p>在 [0，m] 中搜索并找到目标对象 i，以使：<br>(j=0 or i=m or B[j−1]≤A[i]) 或是 (i=0 or j=n or A[i−1]≤B[j]), 其中 j=(m+n+1)/2−i</p></blockquote><p>在循环搜索中，我们只会遇到三种情况：</p><blockquote><p>(j=0 or i=m or B[j−1]≤A[i])) 或是(i=0 or j=n or A[i−1]≤B[j])这意味着 i 是完美的，我们可以停止搜索。<br>j&gt;0 and i&lt;m and B[j−1]&gt;A[i]这意味着 i 太小，我们必须增大它。<br>i&gt;0 and j&lt;n and A[i−1]&gt;B[j]这意味着 i 太大，我们必须减小它。</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">findMedianSortedArrays</span><span class="params">(<span class="type">int</span>[] A, <span class="type">int</span>[] B)</span> {</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> A.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> B.length;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; n) { <span class="comment">// to ensure m&lt;=n</span></span><br><span class="line">            <span class="type">int</span>[] temp = A; A = B; B = temp;</span><br><span class="line">            <span class="type">int</span> <span class="variable">tmp</span> <span class="operator">=</span> m; m = n; n = tmp;</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> <span class="variable">iMin</span> <span class="operator">=</span> <span class="number">0</span>, iMax = m, halfLen = (m + n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (iMin &lt;= iMax) {</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (iMin + iMax) / <span class="number">2</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> halfLen - i;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; iMax &amp;&amp; B[j-<span class="number">1</span>] &gt; A[i]){</span><br><span class="line">                iMin = i + <span class="number">1</span>; <span class="comment">// i is too small</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (i &gt; iMin &amp;&amp; A[i-<span class="number">1</span>] &gt; B[j]) {</span><br><span class="line">                iMax = i - <span class="number">1</span>; <span class="comment">// i is too big</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> { <span class="comment">// i is perfect</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">maxLeft</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) { maxLeft = B[j-<span class="number">1</span>]; }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">0</span>) { maxLeft = A[i-<span class="number">1</span>]; }</span><br><span class="line">                <span class="keyword">else</span> { maxLeft = Math.max(A[i-<span class="number">1</span>], B[j-<span class="number">1</span>]); }</span><br><span class="line">                <span class="keyword">if</span> ( (m + n) % <span class="number">2</span> == <span class="number">1</span> ) { <span class="keyword">return</span> maxLeft; }</span><br><span class="line"></span><br><span class="line">                <span class="type">int</span> <span class="variable">minRight</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (i == m) { minRight = B[j]; }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j == n) { minRight = A[i]; }</span><br><span class="line">                <span class="keyword">else</span> { minRight = Math.min(B[j], A[i]); }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> (maxLeft + minRight) / <span class="number">2.0</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>复杂度分析</p><p>时间复杂度：O(log⁡(min(m,n)))，<br>首先，查找的区间是 [0,m]。 而该区间的长度在每次循环之后都会减少为原来的一半。 所以，我们只需要执行 log⁡(m) 次循环。由于我们在每次循环中进行常量次数的操作，所以时间复杂度为 O(log⁡(m))。 由于 m≤n，所以时间复杂度是 O(log⁡(min(m,n)))。</p><p>空间复杂度：O(1)， 我们只需要恒定的内存来存储 9 个局部变量， 所以空间复杂度为 O(1)。</p>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法总结</title>
      <link href="/2018/09/18/pai-xu-suan-fa-zong-jie/"/>
      <url>/2018/09/18/pai-xu-suan-fa-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>刷leetcode碰到一个难题，里面用到了分治法，想到了归并排序，觉得以前学的排序基本忘得差不多了，特别是快排，直接sort()调用，自己基本实现不了，索性重新复习一遍</p><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>归并排序(Merging Sort)就是将两个或两个以上的有序表合并成一个有序表的过程。将两个有序表合并成一个有序表的过程称为2-路归并，2-路归并最为简单和常用。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。</p><h3 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h3><p>假设初始序列含有n个记录，则可以看成是n个有序的子序列，每个子序列的长度是１，然后两两归并，得到[n/2]个长度为2或１的有序子序列；再两两归并,…如此重复，直到得到一个长度为n的有序子序列为止。</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><p>1.排序：归并排序的时间复杂度是O(nlog2n)，当有n个记录时，需要进行log2n次归并排序，每一次归并，关键字比较次数不超过n，元素移动次数都是n，因此是nlog2n。<br>归并排序是稳定排序(在原序列中，r[i]=r[j]，且r[i]在r[j]之前，而在排序后的序列中，r[i]仍在r[j]之前，则称这种排序算法是稳定的)，可以用于链式结构。<br>2.找逆序对数，以前打ACM碰到过好几次，第一次见到这种题觉得好难，这就说明对归并排序理解不深，这点在紫书上也提到过。当然也可以通过树状数组解决这类问题。</p><h3 id="代码＋解释"><a href="#代码＋解释" class="headerlink" title="代码＋解释"></a>代码＋解释</h3><p><img src="https://i.loli.net/2018/09/19/5ba1c26ba50b3.png" alt="归并排序"><br>对于这张图，将原序列分解为n个子序列，然后开始比较归并，对于分解可以用二分＋递归来实现，合并也是一样。</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//算法实现</span></span><br><span class="line"><span class="comment">//采用紫书代码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span>* A, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span>* T)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span>(y - x &gt; <span class="number">1</span>) {</span><br><span class="line">        <span class="type">int</span> m = x + (y - x) / <span class="number">2</span>;     <span class="comment">//划分</span></span><br><span class="line"><span class="type">int</span> p = x, q = m, i = x;    </span><br><span class="line"><span class="built_in">merge_sort</span>(A, x, m, T);      <span class="comment">//递归求解</span></span><br><span class="line"><span class="built_in">merge_sort</span>(A, m, y, T);      <span class="comment">//递归求解</span></span><br><span class="line"><span class="keyword">while</span>(p &lt; m || q &lt; y) {</span><br><span class="line">    <span class="keyword">if</span>(q &gt;= y || (p &lt; m &amp;&amp; A[p] &lt;= A[q])) T[i++] = A[p++];     <span class="comment">//从左半数组复制到临时空间</span></span><br><span class="line">    <span class="keyword">else</span> T[i++] = A[q++];                                      <span class="comment">//从右半数组复制到临时空间</span></span><br><span class="line">　　　　<span class="comment">// else T[i++] = A[q++], cnt += m - p;                     //这一行就可以实现求逆序对数的问题，其中cnt要先清零</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(i = x; i &lt; y; i++) A[i] = T[i];                            <span class="comment">//从辅助空间复制回A数组</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 排序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UEFI启动模式的电脑安装Win10和Ubuntu双系统</title>
      <link href="/2018/03/23/uefi-qi-dong-mo-shi-de-dian-nao-an-zhuang-win10-he-ubuntu-shuang-xi-tong/"/>
      <url>/2018/03/23/uefi-qi-dong-mo-shi-de-dian-nao-an-zhuang-win10-he-ubuntu-shuang-xi-tong/</url>
      
        <content type="html"><![CDATA[<h2 id="文章简介"><a href="#文章简介" class="headerlink" title="文章简介"></a>文章简介</h2><p>目前有很多教程安装Ubuntu，但大多数都比较老，而且步骤很繁琐，有的还是错的，偶然看到一篇文章写的很详细而且足够简洁，我获得作者授权后，将他的博文转载至此，<a href="https://blog.csdn.net/ysy950803/article/details/52643737">原文链接</a>，作者<a href="https://blog.csdn.net/ysy950803">针叶</a>。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>双硬盘（固态+机械，并且原Windows的引导盘在固态）要装双系统，此文不适用（否则会出现安装完Ubuntu后看不到grub菜单或者搞出来grub菜单后看不到Windows Boot Manager选项，因为你把Ubuntu的引导装在了机械硬盘，和Win的引导不在一个盘），请移步大神们的文章：<br>非UEFI：<br><a href="http://www.jianshu.com/p/c6750e459a94">http://www.jianshu.com/p/c6750e459a94</a><br><a href="http://jingyan.baidu.com/article/e75aca8551621a142edac6db.html">http://jingyan.baidu.com/article/e75aca8551621a142edac6db.html</a><br>最后应该把固态硬盘分一部分出来作为Ubuntu的引导分区（因为下文所讲的是efi引导，最好不要挂载efi了，而是/boot）。</p><p>UEFI：<br>通过BIOS设置切换硬盘启动顺序，以进入不同系统：<br><a href="http://www.cnblogs.com/willnote/p/6725594.html">http://www.cnblogs.com/willnote/p/6725594.html</a></p><p>我个人不太喜欢虚拟机下安装系统，一来运行效率不行，二来原生体验不行。</p><p>原本我的电脑是Windows 10专业版，为了体验和学习Linux，我给本本安装了Ubuntu 16.0.4 LTS（目前官网能下载到的最新版本），于是各种搜安装教程，感觉各种复杂。</p><p>后来我发现了他们复杂的原因，我仔细看了下这些教程文章的时间，很多都是好几年前的教程，就算是时间很近的，也是抄来抄去，长篇大论无奇不有。其实那都是因为以前的电脑都不是UEFI启动，而是Legacy，大家都知道Win8以后都有快速启动，必须得依靠UEFI。</p><p>然而随着UEFI的普及，现在你去买笔记本电脑几乎买不到不是UEFI的，这是一种先进安全的启动模式，而且Ubuntu本身也是支持UEFI启动的，所以安装双系统是非常简单的事情。</p><p>第一步最重要的就是你要分区，Linux没有什么C盘D盘的概念，只有分区挂载目录的概念，所以你在Windows下只需要分出一块较大的未分配空间就行，记住不要去格式化，保证其“未分配”属性（Linux的文件系统和Win是不一样的，NTFS和FAT32都不适用）。<br>用Win自带的磁盘管理不能合并不相邻的未分配空间，所以你要想C盘割一点，D盘割一点，再合在一起那是不行的，解决办法是在WinPE系统环境下使用无损分区软件，去合并不同区域的空闲空间，这里不赘述。（如果不愿使用PE的，直接分割已有分区即可，比如你最后一个分区是F盘，分出几十个GB就行，当然前提是你原本空间够大）</p><p>第二，你必须要有一个U盘（光盘就算了太麻烦了），然后使用软碟通或者USBWriter把iso系统镜像文件烧录进去，这是比较传统的方法，但既然我们UEFI启动，那就根本不需要刻录这么麻烦的工作了，<strong>直接将iso里的所有文件解压至U盘即可</strong>。<br><img src="https://i.loli.net/2018/03/23/5ab517e5ac0cb.jpg" alt="图片"><br>大家可以看到，Ubuntu的镜像文件里本身就有EFI文件夹，说明其实支持UEFI引导安装的。</p><p>然后记得关闭Windows的快速启动，重启电脑，我是Dell的本，开机按F2进入BIOS设置，F12进入启动设置，其它电脑类似，大家自行了解。</p><p>进入BIOS设置后，关闭Security Boot（我这里Dell的本是按F12，再选最后那个Change Mode……，然后改为UEFI, Security Boot Off），最后选择UEFI下的U盘启动，所以整个过程根本不用改为Legacy里的HardDisk启动，那是个既老又慢的启动方式。</p><p>选中USB启动，回车后即进入Ubuntu安装流程，<br>前面几步我就不说了，按照正常的步骤，<strong>如果你选择了安装更新和第三方软件，那么一定要记得联网，否则会卡死在最后的进度条上，所以最好不要勾选</strong>。另外，不要选择“与其它系统共存”那一项，而选择最后那个“其它选项（创建自己的分区）”。</p><p>最最最关键的就是分区这一步，这一步直接影响你安装双系统是否成功！下面依次点击新建分区表来挂载分区。</p><p><strong>swap交换空间</strong>，这个也就是虚拟内存的地方，选择<strong>主分区</strong>和<strong>空间起始位置</strong>。如果你给Ubuntu系统分区容量足够的话，最好是能给到你物理内存的2倍大小，像我8GB内存，就可以给个16GB的空间给它，这个看个人使用情况，太小也不好，太大也没用。（其实我只给了8GB，没什么问题）</p><p>新建<strong>efi系统分区</strong>，选中<strong>逻辑分区</strong>（这里不是主分区，请勿怀疑，老式的boot挂载才是主分区）和<strong>空间起始位置</strong>，大小最好不要小于256MB，系统引导文件都会在里面，我给的512MB，它的作用和boot引导分区一样，但是boot引导是默认grub引导的，而efi显然是UEFI引导的。<strong>不要按照那些老教程去选boot引导分区，也就是最后你的挂载点里没有“/boot”这一项，否则你就没办法UEFI启动两个系统了</strong>。</p><p>挂载“**/home<strong>”，类型为</strong>EXT4日志文件系统<strong>，选中</strong>逻辑分区<strong>和</strong>空间起始位置**，这个相当于你的个人文件夹，类似Windows里的User，如果你是个娱乐向的用户，我建议最好能分配稍微大点，因为你的图片、视频、下载内容基本都在这里面，这些东西可不像在Win上面你想移动就能移动的。<br>总的来说，最好不要低于8GB，我Ubuntu分区的总大小是64GB，这里我给了12GB给home。<br>（这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间，32GB最好……）</p><p>挂载“**/usr<strong>”，类型为</strong>EXT4日志文件系统<strong>，选中</strong>逻辑分区<strong>和</strong>空间起始位置**，这个相当于你的软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此你就知道了，这个分区必须要大，我给了32GB。</p><p>最后，挂载“**/<strong>”，类型为</strong>EXT4日志文件系统<strong>，选中</strong>逻辑分区<strong>和</strong>空间起始位置**，<br>因为除了home和usr还有很多别的目录，但那些都不是最重要的，“/”就把除了之前你挂载的home和usr外的全部杂项囊括了，大小也不要太小，最好不低于8GB。如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（Linux(ubuntu)分区挂载点介绍）<br>不过就算你把所有目录都自定义分配了空间也必须要给“/”挂载点分配一定的空间。</p><blockquote><p>分配好各个挂载点后，还有一个至关重要的步骤，那就是选择“<strong>安装引导启动器的设备</strong>”，默认是错&gt;误的，既然我们为Ubuntu分配了efi系统引导分区，那么显然，这里应该把它改成刚刚第2步分配efi引&gt;导的那个分区（比如我安装时它是/dev/sda7，那么我就选这个）。</p></blockquote><p>如此一来，成功一大半，接下来点击安装，等待差不多半小时即可。这个就看电脑配置和网速了。</p><p>这里再多说一句，如果你安装进度条卡在最后的update-notifier-common，请拔掉你的网线也就是断网，然后再连接，多等一会儿就会好。你点一下那行字就会看到安装详情，只要详情在刷新就没问题。</p><p>安装成功后，会提示你拔掉U盘并且重启，重启后记得进入BIOS改回UEFI Security Boot On模式，也就是重新开启Security Boot，然后再重启你就可以看到选择系统的启动引导界面了，一般来说：<br>第一个是Ubuntu，选这个进入Ubuntu系统，<br>第二个是Ubuntu高级选项，<br>第三个是Windows Boot Manager，也就是启动你的Win10，<br>第四个不好意思忘了。</p><p>默认10s自动进入第一个，如果你不动的话。<br>以上教程比网上一些图文更系统更有用，只要你耐心看完，保证万无一失。安装成功后，Win10的快速启动也可以重新开启。</p><p>最最最后，如果大家装好系统后想要恢复U盘到普通状态的话，请看我的另一篇博文：<a href="https://blog.csdn.net/ysy950803/article/details/52642887">解决U盘制作Ubuntu系统安装盘后无法格式化且容量无法恢复</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单点餐app的实现</title>
      <link href="/2017/12/30/jian-dan-dian-can-app-de-shi-xian/"/>
      <url>/2017/12/30/jian-dan-dian-can-app-de-shi-xian/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这学期开了学Android的课，以前也没看过相关的知识，刚好前两周课设用来检验一下学习的成果，就做了一个点餐的app，实现了和服务器后台的交互，数据库用的mysql，用户使用app，商家使用web页面，由于自己弱渣，用了很多别人的设计和代码，如有侵权，请联系我。</p><h2 id="APP设计"><a href="#APP设计" class="headerlink" title="APP设计"></a>APP设计</h2><p>Android第一次学，代码写的很乱，请不要介意。</p><p><a href="https://github.com/Hiccup1/ELapp">Abdroid项目源码</a>（后台源码在下面）</p><h3 id="界面展示"><a href="#界面展示" class="headerlink" title="界面展示"></a>界面展示</h3><p>这是主要的界面，还有一些展示订单的界面，有一些没用的特效界面。。</p><div><img src="https://i.loli.net/2017/12/30/5a4719de93a12.png" height="330" width="190"><img src="https://i.loli.net/2017/12/30/5a4719c858184.png" height="330" width="190"><img src="https://i.loli.net/2017/12/30/5a4719d4f0b19.png" height="330" width="190"> </div><h3 id="设计简要"><a href="#设计简要" class="headerlink" title="设计简要"></a>设计简要</h3><p>第一次做，写的乱七八糟，基本一个页面一个Activity，底部菜单栏用的Tabhost+Activity实现，有些设计用的github上的代码，由于和服务器交互，读取的是数据库的内容，所以Listview使用最频繁，每加载一个页面都会get/post服务器，对于网络延迟的问题就加了一个Dialog等待加载。java部分写的比较乱，将就着看吧。。</p><h3 id="使用注意"><a href="#使用注意" class="headerlink" title="使用注意"></a>使用注意</h3><p>Github项目中包含了apk文件，可以直接拿来用，不过服务器是我自己的，现在快到期了，可能停止服务。你也可以把后台部署到自己的服务器上来使用，因为后台是用java写的，所以用Tomcat来用就可以。</p><p>如果使用自己的服务器，就要到Android项目中app\src\main\java\com\example\user\util\Data.java 中修改自己的域名或者说ip，这样就可以访问你自己服务器的数据了。war文件和mysql数据库的创建文件也在后台项目中，源码地址在下面。</p><p>其中mysql中图片存储使用的都是外链，你可以使用七牛云，腾讯云，或者其他可提供图片外链的服务。其他数据可以通过商家web界面添加或者直接对数据库操作。</p><h2 id="后台实现"><a href="#后台实现" class="headerlink" title="后台实现"></a>后台实现</h2><p>大二学的java，自己学了一点点java web的知识，这次课设拿来练手，就用eclipse写了后台部署到服务器上，代码稍微比Android好看一些。和app的交互用的servlet接收发送json信息。然后对数据库进行增删改查，实现完整的操作。</p><p>mysql的连接在util类里，可以修改mysql的密码和用户名等等。</p><p><a href="https://github.com/Hiccup1/ELjava">后台项目源码</a></p><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p>浏览器访问界面实现商家的注册和登录，可以对自己店铺的菜品类别等等进行修改，也可以实现接单删除等功能，其他的自己去看。</p><h3 id="设计简要-1"><a href="#设计简要-1" class="headerlink" title="设计简要"></a>设计简要</h3><ul><li>util包含数据库连接和json的解析              </li><li>servlet是对app的连接                      </li><li>action里面写了web页面的servlet，实现店铺数据的增删改查               </li><li>model写了数据库中表的信息，get+set            </li><li>dao+imp实现增删改查的具体操作         </li></ul><h3 id="使用注意-1"><a href="#使用注意-1" class="headerlink" title="使用注意"></a>使用注意</h3><p>我写的时候eclipse myeclipse都使用过，直接导入自己的IDE可能出很多问题，慢慢百度或者各种调整说不定能解决，那就可以修改了</p><p>web页面用的jsp，也可以直接看，简单的操作都实现了，具体的自己研究。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果有什么问题可以直接联系我，或者说有错也可以提出，修改和测试才是漫长的过程。       </p>]]></content>
      
      
      <categories>
          
          <category> app </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔：递归的妙用&lt;1&gt;</title>
      <link href="/2017/12/09/sui-bi-di-gui-de-miao-yong-1/"/>
      <url>/2017/12/09/sui-bi-di-gui-de-miao-yong-1/</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>昨天闲的蛋疼在百度知道回答问题，看到一个很有趣的题目，要求用递归实现如下的输出</p><blockquote><p>1<br>5 2<br>8 6 3<br>10 9 7 4      </p></blockquote><p>想了一段时间， 自己写了个代码，差不多实现了这功能，却又懒得去优化一下。好久没做算法题目lower_bound的参数都记得不太清楚了，不过还好自己写出来的没错，程序成功运行。</p><h2 id="代码-结果"><a href="#代码-结果" class="headerlink" title="代码+结果"></a>代码+结果</h2><blockquote><p>代码如下                      </p></blockquote><pre><code class="cpp">#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;string&gt;#include &lt;cstdlib&gt;#include &lt;set&gt;#include &lt;cmath&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;vector&gt;#include &lt;map&gt;#include &lt;stack&gt;#include &lt;queue&gt;#include &lt;cctype&gt;#define LL long longusing namespace std;const LL inf = 1e18;const LL mod = 1e9+7;int s[10] = {1, 3, 6, 10, 15, 21, 27};int m;void f(int n, int k, int cnt) {    if(n == 1) {        return;    }    else if(cnt == 0) {        cnt = m - k - 1;        k = m;        f(cnt + 1, k, cnt);        printf("%d\n", cnt + 1);    }else {        f(n + k, k - 1, cnt - 1);        printf("%d ", n + k);    }}int main() {    //1 3 6 10 15 21 27    //1 2 3 4  5  6  7    //s = (1 + n) * n / 2    int n;    while(scanf("%d", &amp;n) != EOF) {        int k = lower_bound(s, s + 7, n) - s;        m = k;        f(k + 1, k, k);        printf("%d\n", k + 1);    }    return 0;}</code></pre><blockquote><p>结果如图<br><img src="https://i.loli.net/2017/12/09/5a2becfde7e04.png" alt="结果"></p></blockquote><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>有时间做做这类型的题目也很有意思，锻炼一下思维还是有好处的，这个写的比较烂，如果有更好的方法，不如说出来大家共同探讨一下。</p>]]></content>
      
      
      <categories>
          
          <category> 递归 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA实现微信支付</title>
      <link href="/2017/11/21/java-shi-xian-wei-xin-zhi-fu/"/>
      <url>/2017/11/21/java-shi-xian-wei-xin-zhi-fu/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间在做一个微信公众号，需要用到微信支付的接口，第一次用，果然和前面写其他接口经历一样，好繁琐的操作。去找了相关资料，看了看文档，越看越复杂，大多数博客上面的总是缺着一部分跑不起来，官方demo又好复杂，索性自己好好搞一次。</p><h2 id="需求准备"><a href="#需求准备" class="headerlink" title="需求准备"></a>需求准备</h2><p>1.首先一个公众号（服务号），也可以企业号，订阅号没有支付权限（权限可以查文档），可以去微信公众平台申请，而且需要认证，一年300<br>2.一个域名，必须经过ICP备案，必须备案，很重要，也就是说还需要一个服务器，备案大概1个月<br>3.<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_1">微信支付开发文档</a><br>4.商户平台账号，也就是微信支付平台，前段时间微信支付单独迁移到了商户平台，所以需要单独申请</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><p>1.前提公众号的配置已经完成，比如在公众平台的服务器配置，接口域名配置，授权配置等等。还有商户平台的支付授权目录填写。这些都可以通过文档或者搜索引擎找到。<br>2.接下来需要调用统一下单接口获取预支付id（prepay_id）<br>其中需要很多参数，参数的具体含义可见<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1">文档</a><br>这是<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_3">签名生成算法</a>大多数错误都是由于签名错误             </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//微信支付</span></span><br><span class="line"><span class="type">String</span> <span class="variable">nonceStr</span> <span class="operator">=</span> <span class="string">"2D8264ILTKCH16CQ2502SI8ZNMTM67VS"</span>;<span class="comment">//随机字符串,可以自己生成</span></span><br><span class="line"><span class="type">String</span> <span class="variable">MCHID</span> <span class="operator">=</span> <span class="string">"11111111"</span>;    <span class="comment">//商户号，商户平台注册</span></span><br><span class="line"><span class="type">String</span> <span class="variable">WX_APPID</span> <span class="operator">=</span> ;  <span class="comment">//APPID，也就是公众平台APPID</span></span><br><span class="line"><span class="type">String</span> <span class="variable">body</span> <span class="operator">=</span> <span class="string">"xx"</span>;  <span class="comment">//商品描述</span></span><br><span class="line"><span class="type">String</span> <span class="variable">WX_PAY_CALLBACK</span> <span class="operator">=</span> <span class="string">""</span>;<span class="comment">//异步接收微信支付结果通知的回调地址</span></span><br><span class="line"><span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> request.getRemoteAddr(); <span class="comment">//用户端ip</span></span><br><span class="line"><span class="type">String</span> <span class="variable">orderSn</span> <span class="operator">=</span> String.valueOf((<span class="type">int</span>)(<span class="keyword">new</span> <span class="title class_">Date</span>().getTime()));<span class="comment">//商户订单号,这用的是时间</span></span><br><span class="line"><span class="type">String</span> <span class="variable">relAmount</span> <span class="operator">=</span> <span class="number">1</span>;<span class="comment">//订单总金额，单位为分</span></span><br><span class="line"><span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> user.getOpenid();  <span class="comment">//用户openid</span></span><br><span class="line"><span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">""</span>;  <span class="comment">//商户平台API秘钥</span></span><br><span class="line"><span class="comment">// 加密，这里只列举必填字段</span></span><br><span class="line">Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">map.put(<span class="string">"body"</span>, body);<span class="comment">//商品描述</span></span><br><span class="line">map.put(<span class="string">"mch_id"</span>, MCHID);<span class="comment">//商户平台id</span></span><br><span class="line">map.put(<span class="string">"appid"</span>, WX_APPID);<span class="comment">//公众号id</span></span><br><span class="line">map.put(<span class="string">"nonce_str"</span>, nonceStr);<span class="comment">//随机字符串</span></span><br><span class="line">map.put(<span class="string">"notify_url"</span>, WX_PAY_CALLBACK);<span class="comment">//异步回调api</span></span><br><span class="line">map.put(<span class="string">"spbill_create_ip"</span>, ip);<span class="comment">//支付ip</span></span><br><span class="line">map.put(<span class="string">"out_trade_no"</span>, orderSn);<span class="comment">//商品订单号</span></span><br><span class="line">map.put(<span class="string">"total_fee"</span>, relAmount);<span class="comment">//真实金额</span></span><br><span class="line">map.put(<span class="string">"trade_type"</span>, <span class="string">"JSAPI"</span>);<span class="comment">//JSAPI、h5调用</span></span><br><span class="line">map.put(<span class="string">"openid"</span>, openid);<span class="comment">//支付用户openid</span></span><br><span class="line"><span class="type">String</span> <span class="variable">paySign</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">paySign = WeixinUtil.getPayCustomSign(map,key);<span class="comment">//WeixinUtil类会在下面展示</span></span><br><span class="line"><span class="comment">//这一句是签名生成算法</span></span><br><span class="line">} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">map.put(<span class="string">"sign"</span>,paySign);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"sign  "</span> + paySign);</span><br><span class="line"><span class="type">String</span> <span class="variable">xml</span> <span class="operator">=</span> <span class="string">"&lt;xml&gt;"</span> +</span><br><span class="line">                <span class="string">"&lt;appid&gt;"</span>+ WX_APPID +<span class="string">"&lt;/appid&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;body&gt;"</span>+ body +<span class="string">"&lt;/body&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;mch_id&gt;"</span>+ MCHID +<span class="string">"&lt;/mch_id&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;nonce_str&gt;"</span>+ nonceStr +<span class="string">"&lt;/nonce_str&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;notify_url&gt;"</span>+ WX_PAY_CALLBACK +<span class="string">"&lt;/notify_url&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;openid&gt;"</span>+ openid +<span class="string">"&lt;/openid&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;out_trade_no&gt;"</span>+ orderSn +<span class="string">"&lt;/out_trade_no&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;spbill_create_ip&gt;"</span>+ ip +<span class="string">"&lt;/spbill_create_ip&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;total_fee&gt;"</span>+ relAmount + <span class="string">""</span> +<span class="string">"&lt;/total_fee&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;trade_type&gt;JSAPI&lt;/trade_type&gt;"</span>+</span><br><span class="line">                <span class="string">"&lt;sign&gt;"</span>+ paySign +<span class="string">"&lt;/sign&gt;"</span>+</span><br><span class="line">             <span class="string">"&lt;/xml&gt;"</span>;</span><br><span class="line">System.out.println(xml);</span><br><span class="line"><span class="comment">//将map转为XML格式</span></span><br><span class="line"><span class="comment">//统一下单，这里不用改 </span></span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">"https://api.mch.weixin.qq.com/pay/unifiedorder"</span>; <span class="comment">//统一下单接口</span></span><br><span class="line"><span class="type">String</span> <span class="variable">xmlStr</span> <span class="operator">=</span> WeixinUtil.post(url, xml); <span class="comment">//post请求数据</span></span><br><span class="line">System.out.println(xmlStr);</span><br><span class="line"><span class="type">String</span> <span class="variable">prepayid</span> <span class="operator">=</span> <span class="string">""</span>; </span><br><span class="line"><span class="keyword">if</span> (xmlStr.indexOf(<span class="string">"SUCCESS"</span>) != -<span class="number">1</span>) {  </span><br><span class="line">Map&lt;String, String&gt; map2 = <span class="literal">null</span>;  </span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">map2 = WeixinUtil.xmlToMap(xmlStr);  </span><br><span class="line">} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">}  </span><br><span class="line"></span><br><span class="line">prepayid = (String) map2.get(<span class="string">"prepay_id"</span>);  <span class="comment">//获取prepayid</span></span><br><span class="line">System.out.println(<span class="string">"prepay_id  "</span> + prepayid);</span><br></pre></td></tr></tbody></table></figure><p>现在如果返回了prepay id，那么这一步就算完成，如果出现错误，一般都是签名出错，这时候就要好好看看有没有语法错误，或者签名算法有误。</p><p>3.第二次签名，然后传值到前端</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">timestamp</span> <span class="operator">=</span> System.currentTimeMillis() / <span class="number">1000</span>; <span class="comment">//时间戳</span></span><br><span class="line">Map&lt;String, String&gt; signMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">signMap.put(<span class="string">"appId"</span>, WX_APPID);<span class="comment">//appid</span></span><br><span class="line">signMap.put(<span class="string">"timeStamp"</span>, String.valueOf(timestamp));</span><br><span class="line">signMap.put(<span class="string">"nonceStr"</span>, nonceStr);</span><br><span class="line">signMap.put(<span class="string">"package"</span>, <span class="string">"prepay_id="</span>+prepayid);</span><br><span class="line">signMap.put(<span class="string">"signType"</span>, <span class="string">"MD5"</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">paySign2</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">paySign2 = WeixinUtil.getPayCustomSign(signMap,key);</span><br><span class="line">System.out.println(paySign2);</span><br><span class="line">} <span class="keyword">catch</span> (Exception e) {</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"timestamp"</span> + timestamp);</span><br><span class="line"><span class="comment">//以下的数据需要传到前端，可以用自己的方法传值</span></span><br><span class="line">request.setAttribute(<span class="string">"appId"</span>, WX_APPID); </span><br><span class="line">request.setAttribute(<span class="string">"paytimestamp"</span>, String.valueOf(timestamp));</span><br><span class="line">request.setAttribute(<span class="string">"paynonceStr"</span>, nonceStr);</span><br><span class="line">request.setAttribute(<span class="string">"paypackage"</span>, <span class="string">"prepay_id="</span>+prepayid);</span><br><span class="line">request.setAttribute(<span class="string">"paysignType"</span>,<span class="string">"MD5"</span>);</span><br><span class="line">request.setAttribute(<span class="string">"paySign"</span>, paySign2);</span><br><span class="line"><span class="comment">//去到确认支付页面,返回页面方式不同,(例：pay.html页面)</span></span><br></pre></td></tr></tbody></table></figure><p>4.H5调用微信支付接口  <a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6">官方文档</a>内含代码<br>只需把参数改为自己的，调用接口就可以完成支付</p><p>5.我用到的WeixinUtil类，只是写了用到的一部分，导入的包可能很多没用。。    </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.DocumentBuilder;</span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.DocumentBuilderFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.ClientProtocolException;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.DefaultHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.Node;</span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.NodeList;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParser;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserException;</span><br><span class="line"><span class="keyword">import</span> org.xmlpull.v1.XmlPullParserFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeixinUtil</span> {</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String hexDigits[] = { <span class="string">"0"</span>, <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>,  </span><br><span class="line">        <span class="string">"6"</span>, <span class="string">"7"</span>, <span class="string">"8"</span>, <span class="string">"9"</span>, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>, <span class="string">"f"</span> };  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">post</span><span class="params">(String url,String outStr)</span>{</span><br><span class="line"><span class="type">DefaultHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultHttpClient</span>();</span><br><span class="line"><span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line"><span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(outStr, <span class="string">"utf-8"</span>));</span><br><span class="line"><span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpPost);</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity(),<span class="string">"utf-8"</span>);</span><br><span class="line">res = result;</span><br><span class="line">} <span class="keyword">catch</span> (UnsupportedEncodingException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">catch</span> (ClientProtocolException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取支付所需签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getPayCustomSign</span><span class="params">(Map&lt;String, String&gt; bizObj,String key)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">String</span> <span class="variable">bizString</span> <span class="operator">=</span> FormatBizQueryParaMap(bizObj, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> sign(bizString, key);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">  <span class="comment">//支付所需签名处调用此方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">sign</span><span class="params">(String content, String key)</span></span><br><span class="line">            <span class="keyword">throws</span> Exception{</span><br><span class="line">        <span class="type">String</span> <span class="variable">signStr</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line">        signStr = content + <span class="string">"&amp;key="</span> + key;</span><br><span class="line">        <span class="keyword">return</span> MD5(signStr).toUpperCase();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">  <span class="comment">//上一方法，MD5加密处理</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> String <span class="title function_">MD5</span><span class="params">(String s)</span> {</span><br><span class="line">        <span class="type">char</span> hexDigits[]={<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>};       </span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">byte</span>[] btInput = s.getBytes();</span><br><span class="line">            <span class="type">MessageDigest</span> <span class="variable">mdInst</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">            mdInst.update(btInput);</span><br><span class="line">            <span class="type">byte</span>[] md = mdInst.digest();</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> md.length;</span><br><span class="line">            <span class="type">char</span> str[] = <span class="keyword">new</span> <span class="title class_">char</span>[j * <span class="number">2</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; j; i++) {</span><br><span class="line">                <span class="type">byte</span> <span class="variable">byte0</span> <span class="operator">=</span> md[i];</span><br><span class="line">                str[k++] = hexDigits[byte0 &gt;&gt;&gt; <span class="number">4</span> &amp; <span class="number">0xf</span>];</span><br><span class="line">                str[k++] = hexDigits[byte0 &amp; <span class="number">0xf</span>];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>(str);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字典排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">FormatBizQueryParaMap</span><span class="params">(Map&lt;String, String&gt; paraMap,</span></span><br><span class="line"><span class="params">            <span class="type">boolean</span> urlencode)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">String</span> <span class="variable">buff</span> <span class="operator">=</span> <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            List&lt;Map.Entry&lt;String, String&gt;&gt; infoIds = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Map.Entry&lt;String, String&gt;&gt;(paraMap.entrySet());</span><br><span class="line">            Collections.sort(infoIds,</span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;Map.Entry&lt;String, String&gt;&gt;() {</span><br><span class="line">           <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(Map.Entry&lt;String, String&gt; o1,</span></span><br><span class="line"><span class="params">                  Map.Entry&lt;String, String&gt; o2)</span> {</span><br><span class="line">                 <span class="keyword">return</span> (o1.getKey()).toString().compareTo(</span><br><span class="line">                                    o2.getKey());</span><br><span class="line">                        }</span><br><span class="line">                    });</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; infoIds.size(); i++) {</span><br><span class="line">                Map.Entry&lt;String, String&gt; item = infoIds.get(i);</span><br><span class="line">                <span class="comment">//System.out.println(item.getKey());</span></span><br><span class="line">                <span class="keyword">if</span> (item.getKey() != <span class="string">""</span>) {</span><br><span class="line">                    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> item.getKey();</span><br><span class="line">                    <span class="type">String</span> <span class="variable">val</span> <span class="operator">=</span> item.getValue();</span><br><span class="line">                    <span class="keyword">if</span> (urlencode) {</span><br><span class="line">                        val = URLEncoder.encode(val, <span class="string">"utf-8"</span>);</span><br><span class="line">                    }</span><br><span class="line">                    buff += key + <span class="string">"="</span> + val + <span class="string">"&amp;"</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (buff.isEmpty() == <span class="literal">false</span>) {</span><br><span class="line">                buff = buff.substring(<span class="number">0</span>, buff.length() - <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(e.getMessage());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> buff;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title function_">xmlToMap</span><span class="params">(String strXML)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            Map&lt;String, String&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">            <span class="type">DocumentBuilderFactory</span> <span class="variable">documentBuilderFactory</span> <span class="operator">=</span> DocumentBuilderFactory.newInstance();</span><br><span class="line">            <span class="type">DocumentBuilder</span> <span class="variable">documentBuilder</span> <span class="operator">=</span> documentBuilderFactory.newDocumentBuilder();</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(strXML.getBytes(<span class="string">"UTF-8"</span>));</span><br><span class="line">            org.w3c.dom.<span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> documentBuilder.parse(stream);</span><br><span class="line">            doc.getDocumentElement().normalize();</span><br><span class="line">            <span class="type">NodeList</span> <span class="variable">nodeList</span> <span class="operator">=</span> doc.getDocumentElement().getChildNodes();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">idx</span> <span class="operator">=</span> <span class="number">0</span>; idx &lt; nodeList.getLength(); ++idx) {</span><br><span class="line">                <span class="type">Node</span> <span class="variable">node</span> <span class="operator">=</span> nodeList.item(idx);</span><br><span class="line">                <span class="keyword">if</span> (node.getNodeType() == Node.ELEMENT_NODE) {</span><br><span class="line">                    org.w3c.dom.<span class="type">Element</span> <span class="variable">element</span> <span class="operator">=</span> (org.w3c.dom.Element) node;</span><br><span class="line">                    data.put(element.getNodeName(), element.getTextContent());</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                stream.close();</span><br><span class="line">            } <span class="keyword">catch</span> (Exception ex) {</span><br><span class="line">                <span class="comment">// do nothing</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        } <span class="keyword">catch</span> (Exception ex) {</span><br><span class="line">            <span class="comment">//WXPayUtil.getLogger().warn("Invalid XML, can not convert to map. Error message: {}. XML content: {}", ex.getMessage(), strXML);</span></span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>官方文档写的比较难懂，其他的又比较杂，有的不能用，当然也可以github找demo，这也是我第一次做这些，写的很难看不要在意，如果有错的地方希望提出来，欢迎指导交流。</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信公众号带参二维码的生成与解析（java)</title>
      <link href="/2017/10/02/wei-xin-gong-zhong-hao-dai-can-er-wei-ma-de-sheng-cheng-yu-jie-xi/"/>
      <url>/2017/10/02/wei-xin-gong-zhong-hao-dai-can-er-wei-ma-de-sheng-cheng-yu-jie-xi/</url>
      
        <content type="html"><![CDATA[<p>这些日子一直在做微信公众号的开发，从头开始学，觉得特别复杂，接口一堆，开发文档看不懂，各种bug，由于现在二维码的广泛流传，接触了带参二维码，写一下生成与解析</p><h2 id="带参二维码介绍"><a href="#带参二维码介绍" class="headerlink" title="带参二维码介绍"></a>带参二维码介绍</h2><p>为了满足我们这些用户的需要，公众平台提供了生成带参数二维码的接口。使用该接口可以获得多个带不同场景值的二维码，用户扫描后，公众号可以接收到事件推送。说白了就是可以生成带参数的二维码，后台可以根据参数做出不同的反应，然后推送信息给用户，使一些操作简单化。</p><p>目前有2种类型的二维码，分别是临时二维码和永久二维码，前者有过期时间，但能够生成较多数量，后者无过期时间，数量较少（目前参数只支持1–100000），而且参数只能是整数。</p><p>用户扫描带场景值二维码时，可能推送以下两种事件：<br>如果用户还未关注公众号，则用户可以关注公众号，关注后微信会将带场景值关注事件推送给开发者。<br>如果用户已经关注公众号，在用户扫描后会自动进入会话，微信也会将带场景值扫描事件推送给开发者。</p><h2 id="带参二维码的生成"><a href="#带参二维码的生成" class="headerlink" title="带参二维码的生成"></a>带参二维码的生成</h2><p>1.首先创建二维码ticket，然后凭借ticket到指定URL换取二维码<br>2.然后会返回一个链接，打开就是一个二维码</p><p>当然这些前提就是有公众号并且前期的开发配置已完成，服务器域名什么的都配好了，也认证了，或者用的测试号都可以</p><p>创建二维码ticket需要提供一个开发者自行设定的参数（scene_id），这个就是所谓的参数（整数）</p><blockquote><p>http请求URL<br><a href="https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN">https://api.weixin.qq.com/cgi-bin/qrcode/create?access_token=TOKEN</a></p></blockquote><p>POST数据格式(临时二维码)</p><blockquote><p>{ “expire_seconds”: 1800,”action_name”: “QR_SCENE”,”action_info”: {“scene”: {“scene_id”: 100000}}}</p></blockquote><p>其中expire_seconds就是存在的时间，action_name确定二维码是永久的还是临时的，详细参数的可以看微信开发文档。</p><p>返回格式：（临时二维码)        </p><blockquote><p>{“ticket”:”gQFK8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL3kweXE0T3JscWY3UTltc3ZPMklvAAIEG9jUUgMECAcAAA==”,”expire_seconds”: 1800}</p></blockquote><p>代码:     </p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">JSONObject</span> <span class="variable">tjsonObj</span> <span class="operator">=</span> getTicketJsonObj(<span class="number">6</span>,<span class="number">604800</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">ticketString</span> <span class="operator">=</span> tjsonObj.getString(<span class="string">"ticket"</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">expire_seconds</span> <span class="operator">=</span> tjsonObj.getInt(<span class="string">"expire_seconds"</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> tjsonObj.getString(<span class="string">"url"</span>);</span><br><span class="line">System.out.println(<span class="string">"ticketString:"</span>+ticketString);</span><br><span class="line">System.out.println(<span class="string">"expire_seconds:"</span>+expire_seconds);</span><br><span class="line">System.out.println(<span class="string">"url:"</span>+url);</span><br><span class="line"><span class="type">String</span> <span class="variable">qrcodeUrl</span> <span class="operator">=</span> getQrcodeUrl(tjsonObj);</span><br><span class="line">System.out.println(<span class="string">"qrcodeUrl:"</span>+qrcodeUrl);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title function_">getTicketJsonObj</span><span class="params">(<span class="type">int</span> scene_id,<span class="type">int</span> expire_seconds)</span>{</span><br><span class="line"><span class="type">StringBuffer</span> <span class="variable">ticket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">ticket.append(<span class="string">"{\"expire_seconds\":"</span>);</span><br><span class="line">ticket.append(Integer.toString(expire_seconds));</span><br><span class="line">ticket.append(<span class="string">",\"action_name\":\"QR_SCENE\","</span>);</span><br><span class="line">ticket.append(<span class="string">"\"action_info\":{\"scene\":{\"scene_id\":"</span>);</span><br><span class="line">ticket.append(Integer.toString(scene_id));</span><br><span class="line">ticket.append(<span class="string">"}}}"</span>);</span><br><span class="line"><span class="type">AccessTokenDao</span> <span class="variable">atDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AccessTokenDao</span>();</span><br><span class="line">atDao.checkToken();</span><br><span class="line"><span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> atDao.getAccessTokenBySQL().getToken();</span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> TICKET_URL.replace(<span class="string">"TOKEN"</span>, token);</span><br><span class="line"><span class="type">String</span> <span class="variable">ticket1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(ticket); </span><br><span class="line"><span class="keyword">return</span> doPostStr(url, ticket1);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title function_">doPostStr</span><span class="params">(String url,String outStr)</span>{</span><br><span class="line"><span class="type">DefaultHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultHttpClient</span>();</span><br><span class="line"><span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(url);</span><br><span class="line"><span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">StringEntity</span>(outStr, <span class="string">"utf-8"</span>));</span><br><span class="line"><span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpPost);</span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> EntityUtils.toString(response.getEntity(),<span class="string">"utf-8"</span>);</span><br><span class="line">jsonObject = JSONObject.fromObject(result);</span><br><span class="line">} <span class="keyword">catch</span> (UnsupportedEncodingException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">catch</span> (ClientProtocolException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> jsonObject;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getQrcodeUrl</span><span class="params">(JSONObject ticketObj)</span>{</span><br><span class="line"><span class="type">String</span> <span class="variable">ticketString</span> <span class="operator">=</span> ticketObj.getString(<span class="string">"ticket"</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">url = QRCODE_URL.replace(<span class="string">"TICKET"</span>, URLEncoder.encode(ticketString,<span class="string">"utf-8"</span>));</span><br><span class="line">} <span class="keyword">catch</span> (UnsupportedEncodingException e) {</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> url;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>现在就得到了url，打开就是二维码的图片</p><h2 id="带参二维码的解析"><a href="#带参二维码的解析" class="headerlink" title="带参二维码的解析"></a>带参二维码的解析</h2><p>微信公众平台推送的消息一般是xml来做的。<br>用户扫描带场景值二维码时，可能推送以下两种事件：<br>如果用户还未关注公众号，则用户可以关注公众号，关注后微信会将带场景值关注事件推送给开发者。<br>如果用户已经关注公众号，则微信会将带场景值扫描事件推送给开发者。     </p><ol><li>用户未关注时，进行关注后的事件推送<figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[gh_45072270791c]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[o7Lp5t6n59DeX3U0C7Kric9qEx-Q]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>1389684286<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[event]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Event</span>&gt;</span>&lt;![CDATA[subscribe]]&gt;<span class="tag">&lt;/<span class="name">Event</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EventKey</span>&gt;</span>&lt;![CDATA[qrscene_1000]]&gt;<span class="tag">&lt;/<span class="name">EventKey</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Ticket</span>&gt;</span>&lt;![CDATA[gQHi8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0UweTNxNi1sdlA3RklyRnNKbUFvAAIELdnUUgMEAAAAAA==]]&gt;<span class="tag">&lt;/<span class="name">Ticket</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>其中EventKey包括参数。     </li><li>用户已关注时的事件推送<figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ToUserName</span>&gt;</span>&lt;![CDATA[gh_45072270791c]]&gt;<span class="tag">&lt;/<span class="name">ToUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FromUserName</span>&gt;</span>&lt;![CDATA[o7Lp5t6n59DeX3U0C7Kric9qEx-Q]]&gt;<span class="tag">&lt;/<span class="name">FromUserName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">CreateTime</span>&gt;</span>1389684184<span class="tag">&lt;/<span class="name">CreateTime</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">MsgType</span>&gt;</span>&lt;![CDATA[event]]&gt;<span class="tag">&lt;/<span class="name">MsgType</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Event</span>&gt;</span>&lt;![CDATA[SCAN]]&gt;<span class="tag">&lt;/<span class="name">Event</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EventKey</span>&gt;</span>&lt;![CDATA[1000]]&gt;<span class="tag">&lt;/<span class="name">EventKey</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Ticket</span>&gt;</span>&lt;![CDATA[gQHi8DoAAAAAAAAAASxodHRwOi8vd2VpeGluLnFxLmNvbS9xL0UweTNxNi1sdlA3RklyRnNKbUFvAAIELdnUUgMEAAAAAA==]]&gt;<span class="tag">&lt;/<span class="name">Ticket</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>然后就可以解析这些事件，来做出响应。<figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="keyword">throws</span> ServletException, IOException {</span><br><span class="line"></span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">Map&lt;String, String&gt; map = MessageUtil.xmlToMap(request);</span><br><span class="line"><span class="type">String</span> <span class="variable">toUserName</span> <span class="operator">=</span> map.get(<span class="string">"ToUserName"</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">fromUserName</span> <span class="operator">=</span> map.get(<span class="string">"FromUserName"</span>);<span class="comment">// openid</span></span><br><span class="line"><span class="type">String</span> <span class="variable">msgType</span> <span class="operator">=</span> map.get(<span class="string">"MsgType"</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> map.get(<span class="string">"Content"</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (MessageUtil.MESSAGE_TEXT.equals(msgType)) {</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (MessageUtil.MESSAGE_EVENT.equals(msgType)) {</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line">} <span class="keyword">catch</span> (DocumentException e) {</span><br><span class="line">e.printStackTrace();</span><br><span class="line">} <span class="keyword">finally</span> {</span><br><span class="line">out.close();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>自己可以做一些相关的功能实现或者返回消息给用户</li></ol><p>代码部分是网上的，部分是自己的，写的不好，只是一个大概的方法步骤。<br>如有错误，希望指出</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐几个有趣的网址</title>
      <link href="/2017/09/12/tui-jian-ji-ge-you-qu-de-wang-zhi/"/>
      <url>/2017/09/12/tui-jian-ji-ge-you-qu-de-wang-zhi/</url>
      
        <content type="html"><![CDATA[<p>这是在网上发现的一些有趣的网址</p><p>1 <a href="http://virtocean.com/">http://virtocean.com/</a><br>可以在线倾听海洋里的各种声音,配着3D的海洋效果<br><img src="https://i.loli.net/2017/09/12/59b783d12db92.png" alt="3"></p><p>2 <a href="http://upuptoyou.com/">http://upuptoyou.com/</a><br>这个可以输入一些字符（汉字），生成一张小人举牌的图片<br><img src="https://i.loli.net/2017/09/12/59b78502e4898.png" alt="举牌小人1"></p><p>3 <a href="http://lights.helloenjoy.com/">http://lights.helloenjoy.com/</a><br>一个特别绚丽的网页，如同一个mv</p><p>4 <a href="https://cn.codecombat.com/play">https://cn.codecombat.com/play</a><br>一个游戏网站，但不同的是可以学习编程，在打游戏的过程顺便学学python<br><img src="https://i.loli.net/2017/09/12/59b78691732aa.png" alt="编程游戏2"></p><p>5 <a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/</a><br>一个搜索电子书的网站，提供很多格式，作为小说爱好者不妨看看</p><p>6 <a href="http://glench.com/hash/#CLICK">http://glench.com/hash/#CLICK</a><br>一个很魔性的网站，点开看看地址栏你会明白的，重点是地址栏<br></p><p>7 <a href="http://makeagif.com/">http://makeagif.com/</a><br>这个该收藏的，可以在线将视频转换为gif,youtube视频转换GIF最为方便,直接将链接复制就行<br><img src="https://i.loli.net/2017/09/12/59b78b33bbc92.png" alt="gif4"></p><p>8 <a href="http://produckhunt.co/">http://produckhunt.co/</a><br>打鸭子游戏，不过这个是手机电脑同步，拿手机当做枪<br><img src="https://i.loli.net/2017/09/12/59b78b4e0ac22.png" alt="打鸭子5"></p><p>9 <a href="https://cn.office-converter.com/">https://cn.office-converter.com/</a><br>在线文件格式转换，支持很多文档格式互换</p><p>10 <a href="http://race.assassinscreedpirates.com/">http://race.assassinscreedpirates.com/</a><br>网页版的刺客信条<br><img src="https://i.loli.net/2017/09/12/59b79118567ce.png" alt="刺客信条6"></p>]]></content>
      
      
      <categories>
          
          <category> 网址 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github搭建自己博客（绑定域名）</title>
      <link href="/2017/09/09/hexo-github-da-jian-zi-ji-de-bo-ke/"/>
      <url>/2017/09/09/hexo-github-da-jian-zi-ji-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>一直有些荒废，以前就想做个博客，但服务器贵不说，现在备案贼麻烦，后来知道GitHub上面可以做，用hexo或者Jekyll，我就用hexo+github 做了个博客，当然是用的别人摸板。。</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>先要安装git，<a href="https://git-scm.com/downloads">下载地址</a><br><br>然后安装，基本上是一直默认next，其中在这选第二个</p><p><img src="https://ooo.0o0.ooo/2017/09/11/59b687efbde51.jpg" alt="git安装">  </p><p>一路默认安装完成</p><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>hexo是一款基于Node.js的静态博客框架，需要配置node.js的环境<br><br><a href="//nodejs.org/en/download/">下载地址</a><br>安装时一路默认就可以</p><h2 id="申请github账号-配置git个人信息"><a href="#申请github账号-配置git个人信息" class="headerlink" title="申请github账号,配置git个人信息"></a>申请github账号,配置git个人信息</h2><p>已有账号的的而且SSH keys配置的可以跳过<br><br>当然也可以自己百度/谷歌，可能更详细<br><br>1.设置Git的user name和email</p><blockquote><p>git config –global user.name “” (引号里面填)<br>git config –global user.email “”   </p></blockquote><p>2.生成密钥 SSH keys</p><blockquote><p>ssh-keygen -t rsa -C “邮箱”</p></blockquote><p>按3个回车，密码为空，最后得到了两个文件：id_rsa和id_rsa.pub，存放路径一般：c:/Users/xxxx_000/.ssh/</p><p>3.注册github账号，这个自己可以吧</p><p>4.登录github，点头像-&gt;Settings-&gt;SSH kyes-&gt;Add SSH key。<br>打开id_rsa.pub文件，全选复制公钥内容,将公钥粘贴到GitHub中Add an SSH key的key输入框，最后“Add Key”。</p><p>5.测试ssh keys是否设置成功。</p><blockquote><p>ssh -T <a href="mailto:git@github.com">git@github.com</a></p></blockquote><p>输入yes, 如果出现Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 说明设置成功。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>1.创建文件夹，在哪都行，名字最好blog或者hexo什么的<br>2.在文件下，右键运行Git Bash<br>安装hexo</p><blockquote><p>sudo npm install -g hexo</p></blockquote><p>初始化hexo</p><blockquote><p>hexo init</p></blockquote><p>现在已经安装完成，这个文件就是博客根目录，所有操作都在这里面</p><h2 id="找一些主题，也可以克隆"><a href="#找一些主题，也可以克隆" class="headerlink" title="找一些主题，也可以克隆"></a>找一些主题，也可以克隆</h2><p>找到喜欢的主题后放到themes文件下<br>生成静态页面</p><blockquote><p>hexo generate（hexo g也可以）</p></blockquote><p>本地启动<br>启动本地服务，进行文章预览调试，命令：</p><blockquote><p>hexo server (hexo s)</p></blockquote><p>浏览器输入<a href="http://localhost:4000就可以本地查看博客">http://localhost:4000就可以本地查看博客</a></p><h2 id="配置到github上"><a href="#配置到github上" class="headerlink" title="配置到github上"></a>配置到github上</h2><p>github上面新建一个仓库new repository，仓库名必须为【your_user_name.github.io】，<br>例如 Hiccup1.github.io<br><img src="https://ooo.0o0.ooo/2017/09/11/59b68942d770e.png" alt="仓库名"></p><p>现在打开config.yml文件（自己建的文件夹下），来建立关联<br>翻到下面改成这个样子<br><img src="https://ooo.0o0.ooo/2017/09/11/59b687efa62c1.png" alt="config.yml"><br>注意冒号前面有空格<br>然后执行命令：</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p>接下来就可以发布到github上面</p><blockquote><p>hexo deploy(hexo d)</p></blockquote><p>一般指令就是</p><blockquote><p>hexo clean<br>hexo g  (生成静态文件)<br>hexo s  (启动本地服务,可以<a href="http://localhost:4000本地查看">http://localhost:4000本地查看</a>)<br>hexo d  (发布到github上)</p></blockquote><p>这时候就可以访问自己博客<a href="http://hiccup1.github.io/">http://Hiccup1.github.io</a> (改成你自己的)</p><p>如果自己有域名，可以绑定为自己域名<br>要将域名解析到github的地址（就是Hiccup1.github.io地址，你也可以ping自己的xx.github.io）</p><p>点击settings<br><img src="https://ooo.0o0.ooo/2017/09/11/59b687efb5264.png" alt="aa"></p><p>翻到下面,填上去，保存</p><p><img src="https://ooo.0o0.ooo/2017/09/11/59b687efb434b.png" alt="aaa"></p><p>也可以在根目录/source 目录下创建一个新文件CNAME(不带任何后缀)，直接在CNAME文件中写上自己的域名</p><blockquote><p>hexo g<br>hexo d </p></blockquote><p>就可以了</p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p>写博客可以用Markdown </p><p>主题可以去网上找一下<br><a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br><a href="http://www.jianshu.com/p/bcdbe7347c8d">http://www.jianshu.com/p/bcdbe7347c8d</a></p><p>对于博客需要图片什么的不推荐直接上传，可以在七牛云里面申请空间，七牛云存储也提供了免费CDN配额：存储空间 10GB，每月下载流量 10GB，每月 PUT/DELETE 10万次请求，每月 GET 100万次请求。月流量在10GB以下的博客基本上可以一直免费使用七牛云存储CDN服务了</p>]]></content>
      
      
      <categories>
          
          <category> hexo+github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomcat 打开 startup.bat闪退</title>
      <link href="/2017/07/25/tomcat-da-kai-startup-bat-shan-tui/"/>
      <url>/2017/07/25/tomcat-da-kai-startup-bat-shan-tui/</url>
      
        <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>tomcat安装好之后再bin目录下有startup.bat,双击之后闪退，这一般是由于环境变量设置问题</p><p>可以在cmd里查看相关信息，win+r 输入cmd，之后cd到tomcat安装目录的bin目录下，然后输入startup.bat如果提示缺少JAVA_HOME 或者缺少JRE_HOME，那么就是环境变量的问题，一般也就是这个错误</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>可以通过设置JAVA_HOME 和 JRE_HOME来解决，需要JDK，这个可以参考教程安装，安装好之后，计算机-&gt;属性-&gt;环境变量，win10是计算机-&gt;属性-&gt;高级系统设置-&gt;环境变量<br><img src="https://ooo.0o0.ooo/2017/09/11/59b6876b15998.png" alt="环境变量"><br>选择新建系统变量，变量名为JAVA_HOME，变量值为：JDK安装目录\jdk，然后新建JRE_HOME变量，变量值为jdk安装目录下jdk\jre<br><img src="https://ooo.0o0.ooo/2017/09/11/59b6876b17fdf.png" alt="JAVA"><br><img src="https://ooo.0o0.ooo/2017/09/11/59b6876b1927e.png" alt="jre"><br>之后将这两个变量放到path系统变量中，在path变量值的后面直接追加 ;%JAVA_HOME%;%JRE_HOME%<br>这个必须是这个格式，并且;不可少，如图<br><img src="https://ooo.0o0.ooo/2017/09/11/59b6876b1bd5d.png" alt="path"><br>保存之后就可以启动tomcat</p><blockquote><p>如有错误，欢迎指正</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ACM经历</title>
      <link href="/2017/07/24/acm-jing-li/"/>
      <url>/2017/07/24/acm-jing-li/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2年的经历，教给我很多东西，会遗忘吗？ 当然不会</p></blockquote><h2 id="个人经历"><a href="#个人经历" class="headerlink" title="个人经历"></a>个人经历</h2><p>  在上大学之前也接触过计算机，但是编程基本什么都不懂，在高二拿软件做过一个小的网页，好多文字图片拼凑起来，没什么技术性可言，但还是喜欢计算机，这可能就是兴趣吧。</p><p>  上了大学，第一次接触C语言，还有这么神奇的东西，几天用着一个printf激动的要死，也渐渐明白代码的强大，计算机的强大。C开课前我看了前三章的内容，当时由于教材不太好，第二章就出现了位运算，难得要死，一个一个查一个一个算，问助班，看百度，搞懂那会真的贼高兴。后来开始正式上课，我也认识了陈大师（C语言老师，ACM集训队教练），第一次正式了解了ACM，听着高大上，又说每年从全校录取30个人左右（虽然大部分是计算机学院的），觉得很厉害，当时就定下进ACM这个目标。</p><p>  老师在OJ上面安排了好多题，一放出来我就去做，有时是凌晨那会，上床我也拿手机做（大一上半学期没带电脑），总的来说有空就做，我也保持了大部分专题的第一，虽然只是专业排名，不过也觉得很有成就感，同样认识了好多大佬，都是其他专业排名靠前的。</p><p>  进集训队要通过12月中旬的新生选拔赛，选取排名靠前的，很幸运，我排名18，虽然觉得没发挥好，但是进了ACM候选队员。在下学期有个校赛，全校的都可以参加，也有前几届的，这次比赛打的比新生赛好多了，拿了一等奖，名次不记得了，值得一提的是新生赛第一和校赛第二是我们15级的一个女生，完虐我们这些男的，还是我们班的，后来成为了我的队友。慢慢的经过多场比赛的选拔，积分排名淘汰了一部分人，我也成为了正式队员，当时我的积分排名竟然还是第一，顿时觉得自己也很厉害（这应该是错觉）</p><p>  进了集训队就很辛苦了，周末要抽出一下午比赛，有几小时上课，但是对自己能力有很大提升。在5月份左右要打市赛，3个人组一队，很可惜没和王春大佬组队，春神可以说15级最强了，难受的是市赛发挥失常，多亏陈大神（校赛完虐我们的女生）做了一题，不至于爆零。暑假要集训，就10多天假期，慢慢发现我其实天赋并不好，就是逻辑强一些，也就是说实力不强。暑假期间由于陈大神的退队我们小队变得很差，省赛才4个队的名额，14级占了一半，我们小队肯定参加不了，唉。。</p><p>  接下来一年断断续续训练和比赛，学了点其他东西，有点荒废，还去做了新生上机的指导，一年实力也没多大提升，还好大二市赛拿了银奖，同时还有全国邀请赛铜奖，算是我拿到最好的奖了。</p><p>  暑假集训前由于一些原因退出了集训队，和陈大师交流了一下，没想到老师对我希望还很高，可惜我还是退出了。</p><h2 id="感受心得"><a href="#感受心得" class="headerlink" title="感受心得"></a>感受心得</h2><p>  这两年参加ACM收获很大，特别是算法逻辑都有很大提升，在各大oj也刷了一些题，参加了几次cf,bc,atcoder,参加过一些学校的比赛，一些网络赛，虽然实力不够强，但经验增加很多，同样认识了很多大佬，其他学校的也认识了一些，他们是真的强。不过由于我的智商还是不够，搞应用吧，这个也不需要也别高的算法能力，到现在搭建了自己的博客，也算是在其他方面踏出了一步。</p><p>  我提到的大佬很少，主要是不知道提了会不会挨骂，哈哈哈    </p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
